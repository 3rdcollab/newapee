/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTokenHelper, CTokenHelperInterface } from "../CTokenHelper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract CTokenInterface",
        name: "cTokenMint",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract CTokenInterface",
        name: "cTokenBorrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "MintBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract CTokenInterface",
        name: "cTokenRepay",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract CTokenInterface",
        name: "cTokenRedeem",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "redeemAmount",
        type: "uint256",
      },
    ],
    name: "RepayRedeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenSeized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract CTokenInterface",
        name: "cTokenMint",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        internalType: "contract CTokenInterface",
        name: "cTokenBorrow",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "mintBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract CTokenInterface",
        name: "cTokenRepay",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract CTokenInterface",
        name: "cTokenRedeem",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redeemAmount",
        type: "uint256",
      },
    ],
    name: "repayRedeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "seize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118638061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b146100715780639b4354791461008f578063b97aa544146100ab578063eb9253c0146100c7578063f2fde38b146100e3575b600080fd5b61006f6100ff565b005b610079610187565b6040516100869190610df7565b60405180910390f35b6100a960048036038101906100a49190610e8b565b6101b0565b005b6100c560048036038101906100c09190610ef2565b610493565b005b6100e160048036038101906100dc9190610f99565b61077b565b005b6100fd60048036038101906100f89190610fd9565b610866565b005b61010761095e565b73ffffffffffffffffffffffffffffffffffffffff16610125610187565b73ffffffffffffffffffffffffffffffffffffffff161461017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017290611063565b60405180910390fd5b6101856000610966565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008473ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190611098565b90506102503330868473ffffffffffffffffffffffffffffffffffffffff16610a2a909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b386866040518363ffffffff1660e01b815260040161028b9291906110d4565b6020604051808303816000875af11580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190611135565b5060008573ffffffffffffffffffffffffffffffffffffffff166340c10f1933876040518363ffffffff1660e01b815260040161030c9291906110d4565b6020604051808303816000875af115801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190611177565b1461038f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610386906111f0565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff16634b8a352933856040518363ffffffff1660e01b81526004016103cc929190611231565b6020604051808303816000875af11580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190611177565b1461044f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610446906112a6565b60405180910390fd5b7f594b88efbd537074b9d57c75268b3e426530c44f804320584b7f208c5df657a9858585856040516104849493929190611325565b60405180910390a15050505050565b60008573ffffffffffffffffffffffffffffffffffffffff16636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105049190611098565b90506105333330878473ffffffffffffffffffffffffffffffffffffffff16610a2a909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b387876040518363ffffffff1660e01b815260040161056e9291906110d4565b6020604051808303816000875af115801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190611135565b5060008673ffffffffffffffffffffffffffffffffffffffff1663abdb5ea833886040518363ffffffff1660e01b81526004016105ef9291906110d4565b6020604051808303816000875af115801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190611177565b14610672576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610669906113b6565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16632b83cccd3386866040518463ffffffff1660e01b81526004016106b1939291906113d6565b6020604051808303816000875af11580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611177565b14610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90611459565b60405180910390fd5b7ff4d06eac6ea60604900e0fd281d44d0aae9438f010bbaef549eb57b666993470868686868660405161076b959493929190611479565b60405180910390a1505050505050565b61078361095e565b73ffffffffffffffffffffffffffffffffffffffff166107a1610187565b73ffffffffffffffffffffffffffffffffffffffff16146107f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ee90611063565b60405180910390fd5b610829610802610187565b828473ffffffffffffffffffffffffffffffffffffffff16610ab39092919063ffffffff16565b7fb930d7c3c6896f70ea10a959f1d9a7c04e0467138efa4c7040570d4b8f4894b6828260405161085a9291906110d4565b60405180910390a15050565b61086e61095e565b73ffffffffffffffffffffffffffffffffffffffff1661088c610187565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990611063565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610952576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109499061153e565b60405180910390fd5b61095b81610966565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610aad846323b872dd60e01b858585604051602401610a4b9392919061155e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b39565b50505050565b610b348363a9059cbb60e01b8484604051602401610ad29291906110d4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b39565b505050565b6000610b9b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c009092919063ffffffff16565b9050600081511115610bfb5780806020019051810190610bbb9190611135565b610bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf190611607565b60405180910390fd5b5b505050565b6060610c0f8484600085610c18565b90509392505050565b606082471015610c5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5490611699565b60405180910390fd5b610c6685610d2c565b610ca5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9c90611705565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610cce919061179f565b60006040518083038185875af1925050503d8060008114610d0b576040519150601f19603f3d011682016040523d82523d6000602084013e610d10565b606091505b5091509150610d20828286610d4f565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610d5f57829050610daf565b600083511115610d725782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da6919061180b565b60405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de182610db6565b9050919050565b610df181610dd6565b82525050565b6000602082019050610e0c6000830184610de8565b92915050565b600080fd5b6000610e2282610dd6565b9050919050565b610e3281610e17565b8114610e3d57600080fd5b50565b600081359050610e4f81610e29565b92915050565b6000819050919050565b610e6881610e55565b8114610e7357600080fd5b50565b600081359050610e8581610e5f565b92915050565b60008060008060808587031215610ea557610ea4610e12565b5b6000610eb387828801610e40565b9450506020610ec487828801610e76565b9350506040610ed587828801610e40565b9250506060610ee687828801610e76565b91505092959194509250565b600080600080600060a08688031215610f0e57610f0d610e12565b5b6000610f1c88828901610e40565b9550506020610f2d88828901610e76565b9450506040610f3e88828901610e40565b9350506060610f4f88828901610e76565b9250506080610f6088828901610e76565b9150509295509295909350565b610f7681610dd6565b8114610f8157600080fd5b50565b600081359050610f9381610f6d565b92915050565b60008060408385031215610fb057610faf610e12565b5b6000610fbe85828601610f84565b9250506020610fcf85828601610e76565b9150509250929050565b600060208284031215610fef57610fee610e12565b5b6000610ffd84828501610f84565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061104d602083611006565b915061105882611017565b602082019050919050565b6000602082019050818103600083015261107c81611040565b9050919050565b60008151905061109281610f6d565b92915050565b6000602082840312156110ae576110ad610e12565b5b60006110bc84828501611083565b91505092915050565b6110ce81610e55565b82525050565b60006040820190506110e96000830185610de8565b6110f660208301846110c5565b9392505050565b60008115159050919050565b611112816110fd565b811461111d57600080fd5b50565b60008151905061112f81611109565b92915050565b60006020828403121561114b5761114a610e12565b5b600061115984828501611120565b91505092915050565b60008151905061117181610e5f565b92915050565b60006020828403121561118d5761118c610e12565b5b600061119b84828501611162565b91505092915050565b7f6d696e74206661696c6564000000000000000000000000000000000000000000600082015250565b60006111da600b83611006565b91506111e5826111a4565b602082019050919050565b60006020820190508181036000830152611209816111cd565b9050919050565b600061121b82610db6565b9050919050565b61122b81611210565b82525050565b60006040820190506112466000830185611222565b61125360208301846110c5565b9392505050565b7f626f72726f77206661696c656400000000000000000000000000000000000000600082015250565b6000611290600d83611006565b915061129b8261125a565b602082019050919050565b600060208201905081810360008301526112bf81611283565b9050919050565b6000819050919050565b60006112eb6112e66112e184610db6565b6112c6565b610db6565b9050919050565b60006112fd826112d0565b9050919050565b600061130f826112f2565b9050919050565b61131f81611304565b82525050565b600060808201905061133a6000830187611316565b61134760208301866110c5565b6113546040830185611316565b61136160608301846110c5565b95945050505050565b7f7265706179206661696c65640000000000000000000000000000000000000000600082015250565b60006113a0600c83611006565b91506113ab8261136a565b602082019050919050565b600060208201905081810360008301526113cf81611393565b9050919050565b60006060820190506113eb6000830186611222565b6113f860208301856110c5565b61140560408301846110c5565b949350505050565b7f72656465656d206661696c656400000000000000000000000000000000000000600082015250565b6000611443600d83611006565b915061144e8261140d565b602082019050919050565b6000602082019050818103600083015261147281611436565b9050919050565b600060a08201905061148e6000830188611316565b61149b60208301876110c5565b6114a86040830186611316565b6114b560608301856110c5565b6114c260808301846110c5565b9695505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611528602683611006565b9150611533826114cc565b604082019050919050565b600060208201905081810360008301526115578161151b565b9050919050565b60006060820190506115736000830186610de8565b6115806020830185610de8565b61158d60408301846110c5565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006115f1602a83611006565b91506115fc82611595565b604082019050919050565b60006020820190508181036000830152611620816115e4565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611683602683611006565b915061168e82611627565b604082019050919050565b600060208201905081810360008301526116b281611676565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116ef601d83611006565b91506116fa826116b9565b602082019050919050565b6000602082019050818103600083015261171e816116e2565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561175957808201518184015260208101905061173e565b83811115611768576000848401525b50505050565b600061177982611725565b6117838185611730565b935061179381856020860161173b565b80840191505092915050565b60006117ab828461176e565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006117dd826117b6565b6117e78185611006565b93506117f781856020860161173b565b611800816117c1565b840191505092915050565b6000602082019050818103600083015261182581846117d2565b90509291505056fea2646970667358221220b16a5790667858edfac645f267341a70853b7faf8c4f47805f373574e34762dd64736f6c634300080b0033";

type CTokenHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CTokenHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CTokenHelper__factory extends ContractFactory {
  constructor(...args: CTokenHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTokenHelper> {
    return super.deploy(overrides || {}) as Promise<CTokenHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CTokenHelper {
    return super.attach(address) as CTokenHelper;
  }
  override connect(signer: Signer): CTokenHelper__factory {
    return super.connect(signer) as CTokenHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTokenHelperInterface {
    return new utils.Interface(_abi) as CTokenHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTokenHelper {
    return new Contract(address, _abi, signerOrProvider) as CTokenHelper;
  }
}
